---
- name: Register docker directory var
  stat:
    path: '{{ service_image_dir }}'
  register: service_image_dir
  tags: init

- name: '{{ service_name }} : create service image folder'
  file:
    path: '{{ service_image_dir }}'
    state: directory
    recurse: yes
    mode: 0755
  tags: init

- name: '{{ service_name }} : create service directories'
  file:
    path: '{{ service_image_dir }}/{{ item }}'
    state: directory
    mode: 0755
  loop: '{{ service_dirs|default([]) }}'
  tags: [init, skip_ansible_lint]

- name: '{{ service_name }} : create directories'
  file:
    path: '{{ service_image_dir }}/{{ item.path }}'
    state: directory
    mode: '{{ item.mode }}'
  with_filetree: '../templates/{{ service_name }}/image'
  when: item.state == 'directory'
  tags: [init, skip_ansible_lint]

- name: '{{ service_name }} : create config files from templates'
  template:
    src: '{{ item.src }}'
    dest: "{{ service_image_dir }}/{{ item.path | regex_replace('^(.*?)(\\.j2)?$', '\\1') }}"
    mode: '{{ item.mode }}'
  with_filetree: '../templates/{{ service_name }}/image'
  when: item.state == 'file'
  tags: [init, skip_ansible_lint]

- name: '{{ service_name }} : create image config files from templates'
  template:
    src: '{{ item.src }}'
    dest: "{{ service_image_dir }}/{{ item.path | regex_replace('^(.*?)(\\.j2)?$', '\\1') }}"
    mode: '{{ item.mode }}'
  with_filetree: '../templates/image'
  when: item.state == 'file'
  tags: [init, skip_ansible_lint]

- name: '{{ service_name }} : copy files'
  copy:
    src: "{{ item['src'] }}"
    dest: "{{ item['dest'] }}"
    mode: 0755
  loop: '{{ service_copy_files|default([]) }}'
  tags: init

- name: '{{ service_name }} : generate certs'
  shell: |
    "{{ pki_path }}/easy-rsa/easyrsa3/easyrsa" --batch build-server-full "{{ item }}" nopass
  args:
    creates: '{{ pki_path }}/certs/issued/{{ item }}.crt'
  loop: '{{ service_gen_certs|default([]) }}'
  tags: init

- name: '{{ service_name }} : copy certs'
  copy:
    src: '{{ pki_path }}/certs/{{ item.src }}'
    dest: '{{ service_image_dir }}/{{ item.dest }}'
    mode: 0755
    remote_src: yes
  loop: '{{ service_copy_certs|default([]) }}'
  tags: init

- name: '{{ service_name }} : create docker image'
  shell: 'docker build {{ service_image_dir }}/ --tag {{ docker_registry_url }}/{{ project }}-{{ service_name }}:latest'
  when: docker_registry_url is defined
  register: shell_output
  tags: [build, skip_ansible_lint]

- name: '{{ service_name }} : debug : create docker image'
  ansible.builtin.debug:
    var: shell_output.cmd
  when: docker_registry_url is defined
  tags: [build, skip_ansible_lint]

- name: '{{ service_name }} : push docker image {{ docker_registry_url }}/{{ project }}-{{ service_name }}:latest'
  command: "docker push {{ docker_registry_url }}/{{ project }}-{{ service_name }}:latest"
  when: docker_registry_url is defined
  register: shell_output
  tags: push

- name: '{{ service_name }} : debug : push docker image'
  ansible.builtin.debug:
    var: shell_output.cmd
  when: docker_registry_url is defined
  tags: push

- name: '{{ service_name }} : create docker image'
  shell: 'docker build {{ service_image_dir }}/ --tag {{ project }}-{{ service_name }}:latest'
  when: docker_registry_url is not defined
  register: shell_output
  tags: [build, skip_ansible_lint]

- name: '{{ service_name }} : debug : create docker image'
  ansible.builtin.debug:
    var: shell_output.cmd
  when: docker_registry_url is not defined
  tags: [build, skip_ansible_lint]
